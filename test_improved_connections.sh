#!/bin/bash

echo "🔧 Testing Improved P2P Connection Stability"
echo "============================================="

# Build the project
echo "📦 Building project with improved connection handling..."
cargo build --features bluetooth --release

if [ $? -ne 0 ]; then
    echo "❌ Build failed!"
    exit 1
fi

echo "✅ Build successful!"
echo ""

echo "🚀 Key Improvements Made:"
echo "  • More frequent keep-alive messages (every 15 seconds)"
echo "  • Welcome messages sent on connection establishment"
echo "  • Better connection timeout handling"
echo "  • Improved message parsing for different message types"
echo "  • Enhanced logging for connection events"
echo ""

echo "📋 Testing Instructions:"
echo ""
echo "1. Start Device 1 (Bootstrap Node):"
echo "   cargo run --features bluetooth -- --db-path ./device1-data start-with-api --node-port 8082 --api-port 8085"
echo ""
echo "2. Start Device 2 (Connecting Node):"
echo "   cargo run --features bluetooth -- --db-path ./device2-data start-with-api --node-port 8083 --api-port 8086 --bootstrap \"/ip4/[DEVICE1_IP]/tcp/8082\""
echo ""
echo "3. Test Data Gossiping:"
echo "   # On Device 1:"
echo "   curl -X POST http://localhost:8085/api/keys -H \"Content-Type: application/json\" -d '{\"key\": \"test:connection\", \"value\": \"stable\"}'"
echo ""
echo "   # On Device 2:"
echo "   curl http://localhost:8086/api/keys/test:connection"
echo ""
echo "4. Monitor Connection Stability:"
echo "   • Look for '✅ 📡 TCP/Wi-Fi Connected to peer' messages"
echo "   • Look for '👋 Received welcome from peer' messages"
echo "   • Look for '💓 Received keep-alive from peer' messages"
echo "   • Connections should stay stable without KeepAliveTimeout errors"
echo ""
echo "🔵 Bluetooth Testing:"
echo "   • Turn off Wi-Fi on both devices"
echo "   • Keep Bluetooth enabled"
echo "   • Look for '🔵 Bluetooth Connected to peer' messages"
echo "   • Data gossiping should continue over Bluetooth"
echo ""
echo "📊 Expected Behavior:"
echo "  • Connections should establish and remain stable"
echo "  • Keep-alive messages should prevent timeouts"
echo "  • Welcome messages should confirm peer connections"
echo "  • Data should gossip reliably between peers"
echo "  • Bluetooth fallback should work when Wi-Fi is disabled"
echo ""
echo "🎯 Success Criteria:"
echo "  • No more 'KeepAliveTimeout' disconnections"
echo "  • Stable peer connections lasting > 5 minutes"
echo "  • Successful data synchronization between devices"
echo "  • Bluetooth connectivity when Wi-Fi is unavailable"
echo ""
echo "Ready to test! 🚀"
